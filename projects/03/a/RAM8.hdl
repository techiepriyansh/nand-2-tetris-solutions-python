// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    	
    	DMux8Way(in=load, sel=address, a=ai, b=bi, c=ci, d=di, e=ei, f=fi, g=gi, h=hi);

			Register(in=in, load=ai, out=ao);
			Register(in=in, load=bi, out=bo);
			Register(in=in, load=ci, out=co);
			Register(in=in, load=di, out=do);
			Register(in=in, load=ei, out=eo);
			Register(in=in, load=fi, out=fo);
			Register(in=in, load=gi, out=go);
			Register(in=in, load=hi, out=ho);    	

    	Mux8Way16(a=ao, b=bo, c=co, d=do, e=eo, f=fo, g=go, h=ho, sel=address, out=out);
}